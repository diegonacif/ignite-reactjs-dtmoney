{"version":3,"sources":["assets/income.svg","assets/outcome.svg","assets/total.svg","components/Summary/styles.ts","components/Summary/index.tsx","services/api.ts","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","styles/global.ts","assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","Summary","src","incomeImg","alt","outcomeImg","className","totalImg","api","axios","create","baseURL","TransactionsTable","useEffect","get","then","response","console","log","data","main","Dashboard","header","Content","Header","onOpenNewTransactionModal","logoImg","type","onClick","GlobalStyle","createGlobalStyle","form","TransactionTypeContainer","colors","green","red","RadioBox","button","props","isActive","transparentize","activeColor","darken","NewTransactionModal","isOpen","onRequestClose","useState","title","setTitle","value","setValue","category","setCategory","setType","overlayClassName","closeImg","onSubmit","event","preventDefault","post","placeholder","onChange","target","Number","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","models","transaction","Model","routes","this","namespace","schema","all","request","JSON","parse","requestBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAAe,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,kC,cCE5BA,EAAYC,IAAOC,IAAV,imB,OCIf,SAASC,IACd,OACE,eAACH,EAAD,WACE,gCACE,mCACE,yCACA,qBAAKI,IAAKC,EAAWC,IAAI,gBAE3B,kDAEF,gCACE,mCACE,0CACA,qBAAKF,IAAKG,EAAYD,IAAI,iBAE5B,kDAEF,sBAAKE,UAAU,uBAAf,UACE,mCACE,sCACA,qBAAKJ,IAAKK,EAAUH,IAAI,aAE1B,oD,gBC1BKI,E,OAAMC,EAAMC,OAAO,CAC9BC,QAAS,8BCDEb,EAAYC,IAAOC,IAAV,4mBCEf,SAASY,IAOd,OANAC,qBAAU,WACRL,EAAIM,IAAI,gBACLC,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,EAASG,WACxC,IAID,cAAC,EAAD,UACE,kCACE,gCACE,+BACE,2CACA,uCACA,2CACA,2CAIJ,kCACE,+BACE,4DACA,oBAAIb,UAAU,UAAd,yBACA,iDACA,+CAEF,+BACE,yCACA,oBAAIA,UAAU,WAAd,0BACA,sCACA,uDChCL,IAAMR,EAAYC,IAAOqB,KAAV,yFCEf,SAASC,IACd,OACE,eAAC,EAAD,WACE,cAACpB,EAAD,IACA,cAACW,EAAD,OCRS,I,MAAA,MAA0B,iCCE5Bd,EAAYC,IAAOuB,OAAV,wDAITC,EAAUxB,IAAOC,IAAV,8bCGb,SAASwB,EAAT,GAA6D,IAA3CC,EAA0C,EAA1CA,0BAGvB,OACE,cAAC,EAAD,UACE,eAACF,EAAD,WACE,qBAAKrB,IAAKwB,EAAStB,IAAI,aACvB,wBAAQuB,KAAK,SAASC,QAASH,EAA/B,uCCdD,I,MAAMI,EAAcC,YAAH,+9C,iBCFT,MAA0B,kC,QCG5BhC,EAAYC,IAAOgC,KAAV,k0BAiDTC,EAA2BjC,IAAOC,IAAV,0HAc/BiC,EAAS,CACbC,MAAO,UACPC,IAAK,WAGMC,EAAWrC,IAAOsC,OAAV,ocAKL,SAACC,GAAD,OAAWA,EAAMC,SAC7BC,YAAe,IAAMP,EAAOK,EAAMG,cAClC,gBASgBC,YAAO,GAAK,YC1EzB,SAASC,EAAT,GAAkF,IAApDC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,eAA2C,EAC5DC,mBAAS,IADmD,mBAC/EC,EAD+E,KACxEC,EADwE,OAE5DF,mBAAS,GAFmD,mBAE/EG,EAF+E,KAExEC,EAFwE,OAGtDJ,mBAAS,IAH6C,mBAG/EK,EAH+E,KAGrEC,EAHqE,OAI9DN,mBAAS,WAJqD,mBAI/EnB,EAJ+E,KAIzE0B,EAJyE,KAmBtF,OACE,eAAC,IAAD,CACET,OAAQA,EACRC,eAAgBA,EAChBS,iBAAiB,sBACjBhD,UAAU,sBAJZ,UAME,wBACEqB,KAAK,SACLC,QAASiB,EACTvC,UAAU,oBAHZ,SAKE,qBAAKJ,IAAKqD,EAAUnD,IAAI,mBAG1B,eAAC,EAAD,CAAWoD,SA5Bf,SAAoCC,GAClCA,EAAMC,iBAEN,IAAMvC,EAAO,CACX4B,QACAE,QACAE,WACAxB,QAGFnB,EAAImD,KAAK,gBAAiBxC,IAkBxB,UACE,2DAEA,uBACEyC,YAAY,YACZX,MAAOF,EACPc,SAAU,SAAAJ,GAAK,OAAIT,EAASS,EAAMK,OAAOb,UAG3C,uBACEtB,KAAK,SACLiC,YAAY,QACZX,MAAOA,EACPY,SAAU,SAAAJ,GAAK,OAAIP,EAASa,OAAON,EAAMK,OAAOb,WAGlD,eAACjB,EAAD,WACE,eAACI,EAAD,CACET,KAAK,SACLC,QAAS,WAAOyB,EAAQ,YACxBd,SAAmB,YAATZ,EACVc,YAAY,QAJd,UAME,qBAAKvC,IAAKC,EAAWC,IAAI,YACzB,8CAEF,eAACgC,EAAD,CACET,KAAK,SACLC,QAAS,WAAOyB,EAAQ,aACxBd,SAAmB,aAATZ,EACVc,YAAY,MAJd,UAME,qBAAKvC,IAAKG,EAAYD,IAAI,aAC1B,kDAIJ,uBACEwD,YAAY,YACZX,MAAOE,EACPU,SAAU,SAAAJ,GAAK,OAAIL,EAAYK,EAAMK,OAAOb,UAG9C,wBACEtB,KAAK,SADP,6BCjFD,SAASqC,IAAO,IAAD,EAC8ClB,oBAAS,GADvD,mBACbmB,EADa,KACcC,EADd,KAUpB,OACE,qCACE,cAAC1C,EAAD,CAAQC,0BATZ,WACEyC,GAA6B,MAS3B,cAAC7C,EAAD,IAEA,cAACsB,EAAD,CACEC,OAAQqB,EACRpB,eAVN,WACEqB,GAA6B,MAY3B,cAACrC,EAAD,OAtBNsC,IAAMC,cAAc,SCFpBC,YAAa,CACXC,OAAQ,CACNC,YAAaC,KAGfC,OALW,WAKD,IAAD,OACPC,KAAKC,UAAY,MAEjBD,KAAK5D,IAAI,iBAAiB,WACxB,OAAO,EAAK8D,OAAOC,IAAI,kBAGzBH,KAAKf,KAAK,iBAAiB,SAACiB,EAAQE,GAClC,IAAM3D,EAAO4D,KAAKC,MAAMF,EAAQG,aAEhC,OAAOL,EAAOlE,OAAO,eAAgBS,SAK3C+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,W","file":"static/js/main.1d31f65c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/outcome.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.efc003fe.svg\";","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  margin-top: -10rem;\n\n  div {\n    background: var(--shape);\n    padding: 1.5rem 2rem;\n    border-radius: 0.25rem;\n    color: var(--text-title);\n\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    strong {\n      display: block;\n      margin-top: 1rem;\n      font-size: 2rem;\n      font-weight: 500;\n      line-height: 3rem;\n    }\n\n    &.highlight-background {\n      background: var(--green);\n      color: #fff;\n    }\n  }\n`;","import incomeImg from '../../assets/income.svg';\nimport outcomeImg from '../../assets/outcome.svg';\nimport totalImg from '../../assets/total.svg';\n\nimport { Container } from \"./styles\";\n\nexport function Summary() {\n  return (\n    <Container>\n      <div>\n        <header>\n          <p>Entradas</p>\n          <img src={incomeImg} alt=\"Entradas\" />\n        </header>\n        <strong>R$1000,00</strong>\n      </div>\n      <div>\n        <header>\n          <p>Saídas</p>\n          <img src={outcomeImg} alt=\"Saídas\" />\n        </header>\n        <strong>-R$500,00</strong>\n      </div>\n      <div className=\"highlight-background\">\n        <header>\n          <p>Total</p>\n          <img src={totalImg} alt=\"Total\" />\n        </header>\n        <strong>R$500,00</strong>\n      </div>\n    </Container>\n  )\n};","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n})","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n\n  table {\n    width: 100%;\n    border-spacing: 0 0.5rem;\n\n    th {\n      color: var(--text-body);\n      font-weight: 400;\n      padding: 1rem 2rem;\n      text-align: left;\n      line-height: 1.5rem;\n    }\n\n    td {\n      padding: 1rem 2rem;\n      border: 0;\n      background: var(--shape);\n      color: var(--text-body);\n      border-radius: 0.25rem;\n\n      &:first-child {\n        color: var(--text-title);\n      }\n\n      &.deposit {\n        color: var(--green);\n      }\n\n      &.withdraw {\n        color: var(--red);\n      }\n    }\n  }\n`;","import { useEffect } from 'react';\nimport { api } from '../../services/api';\nimport { Container } from './styles';\n\nexport function TransactionsTable() {\n  useEffect(() => {\n    api.get('transactions')\n      .then(response => console.log(response.data))\n  }, []);\n\n\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>Título</th>\n            <th>Valor</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td>Desenvolvimento de website</td>\n            <td className=\"deposit\">R$12.000,00</td>\n            <td>Desenvolvimento</td>\n            <td>20/02/2021</td>\n          </tr>\n          <tr>\n            <td>Aluguel</td>\n            <td className=\"withdraw\">- R$1.100,00</td>\n            <td>Casa</td>\n            <td>17/02/2021</td>\n          </tr>\n        </tbody>\n      </table>\n    </Container>\n  )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 2.5rem;\n`;","import { Summary } from \"../Summary\";\nimport { TransactionsTable } from \"../TransactionsTable\";\nimport { Container } from \"./styles\";\n\nexport function Dashboard() {\n  return (\n    <Container>\n      <Summary />\n      <TransactionsTable />\n    </Container>\n  )\n};","export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  background: var(--blue);\n`;\n\nexport const Content = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n\n  padding: 2rem 1rem 12rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button{\n    font-size: 1rem;\n    color: #fff;\n    background: var(--blue-light);\n    border: 0;\n    padding: 0 2rem;\n    border-radius: 0.25rem;\n    height: 3rem;\n\n    transition: filter 0.25s;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;","import logoImg from '../../assets/logo.svg';\n\n\nimport { Container, Content } from './styles';\n\ninterface HeaderProps {\n  onOpenNewTransactionModal: () => void;\n}\n\nexport function Header({ onOpenNewTransactionModal }: HeaderProps) {\n  \n\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"dt money\" />\n        <button type=\"button\" onClick={onOpenNewTransactionModal}>\n          Nova Transação\n        </button>\n\n        \n      </Content>\n    </Container>\n  )\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --red: #e52e4d;\n    --blue: #5429cc;\n    --green: #33cc95;\n\n    --blue-light: #6933ff;\n\n    --text-title: #363f5f;\n    --text-body: #969cb3;\n\n    --background: #f0f2f5;\n    --shape: #ffffff\n  }\n  \n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;    \n  }\n\n  html {\n    @media (max-width: 1080px) {\n      font-size: 93.75%;\n    }\n\n    @media (max-width: 720px) {\n      font-size: 87.5%;\n    }\n  }\n\n  body {\n    background: var(--background);\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, textarea, button {\n    font-family: 'Poppins', sans-serif;\n    font-weight: 400;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 600;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  [disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .react-modal-overlay {\n    background: rgba(0, 0, 0, 0.5);\n\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .react-modal-content {\n    width: 100%;\n    max-width: 576px;\n\n    background: var(--background);\n    padding: 3rem;\n    position: relative;\n    border-radius: 0.25rem;\n  }\n\n  .react-modal-close {\n    position: absolute;\n    right: 1.5rem;\n    top: 1.5rem;\n    border: 0;\n    background: transparent;\n\n    transition: filter 0.25s;\n\n    &:hover {\n      filter: brightness(0.8);\n    }\n  }\n`","export default __webpack_public_path__ + \"static/media/close.3e141cd0.svg\";","import styled from 'styled-components';\nimport { darken, transparentize } from 'polished';\n\nexport const Container = styled.form`\n  h2 {\n    color: var(--text-title);\n    font-size: 1.5rem;\n    margin-bottom: 2rem;    \n  }\n\n  input {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    border-radius: 0.25rem;\n\n    border: 1px solid #d7d7d7;\n    background: #e7e9ee;\n\n    font-weight: 400;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--text-body);\n\n    }\n\n    & + input {\n      margin-top: 1rem;\n    }\n  }\n\n  button[type=\"submit\"] {\n      width: 100%;\n      padding: 0 1.5rem;\n      height: 4rem;\n      background: var(--green);\n      color: #fff;\n      border-radius:0.25rem;\n      border: 0;\n      font-size: 1rem;\n      font-weight: 600;\n      margin-top: 1.5rem;\n\n      transition: filter 0.25s;\n\n      &:hover {\n        filter: brightness(0.9);\n      }\n    }\n`;\n\nexport const TransactionTypeContainer = styled.div`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.5rem;\n\n  \n`;\n\ninterface RadioBoxProps {\n  isActive: boolean;\n  activeColor: 'green' | 'red';\n}\n\nconst colors = {\n  green: '#33cc95',\n  red: '#e52e4d'\n}\n\nexport const RadioBox = styled.button<RadioBoxProps>`\n  height: 4rem;\n  border: 1px solid #d7d7d7;\n  border-radius: 0.25rem;\n\n  background: ${(props) => props.isActive\n  ? transparentize(0.85, colors[props.activeColor])\n  : 'transparent'};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: border-color 0.25s;\n\n  &:hover {\n    border-color: ${darken(0.1, '#d7d7d7')};\n  }\n\n  img {\n    width: 20px;\n    height: 20px;\n  }\n\n  span {\n    display: inline-block;\n    margin-left: 1rem;\n    font-size: 1rem;\n    color: var(--text-title);\n  }\n`;","import Modal from 'react-modal';\nimport { api } from '../../services/api';\nimport incomeImg from '../../assets/income.svg';\nimport outcomeImg from '../../assets/outcome.svg'\nimport closeImg from '../../assets/close.svg';\nimport { Container, TransactionTypeContainer, RadioBox } from './styles';\nimport { FormEvent, useState } from 'react';\n\ninterface NewTransactionModalProps {\n  isOpen: boolean;\n  onRequestClose: () => void;\n}\n\nexport function NewTransactionModal({isOpen, onRequestClose}: NewTransactionModalProps) {\n  const [title, setTitle] = useState('');\n  const [value, setValue] = useState(0);\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('deposit');\n\n  function handleCreateNewTransaction(event: FormEvent) {\n    event.preventDefault();\n\n    const data = {\n      title,\n      value,\n      category,\n      type,\n    };\n\n    api.post('/transactions', data)\n  }\n  \n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      overlayClassName=\"react-modal-overlay\"\n      className=\"react-modal-content\"  \n    >\n      <button\n        type=\"button\"\n        onClick={onRequestClose}\n        className=\"react-modal-close\"\n        >\n        <img src={closeImg} alt=\"Fechar modal\" />\n      </button>\n\n      <Container onSubmit={handleCreateNewTransaction}>\n        <h2>Cadastrar transação</h2>\n\n        <input\n          placeholder=\"Título\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n        />\n\n        <input\n          type=\"number\"\n          placeholder=\"Valor\"\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n        />\n\n        <TransactionTypeContainer>\n          <RadioBox\n            type=\"button\"\n            onClick={() => {setType('deposit'); }}\n            isActive={type === 'deposit'}\n            activeColor=\"green\"\n          >\n            <img src={incomeImg} alt=\"Entrada\" />\n            <span>Entrada</span>\n          </RadioBox>\n          <RadioBox\n            type=\"button\"\n            onClick={() => {setType('withdraw'); }}\n            isActive={type === 'withdraw'}\n            activeColor=\"red\"\n          >\n            <img src={outcomeImg} alt=\"Saída\" />\n            <span>Saída</span>\n          </RadioBox>\n        </TransactionTypeContainer>\n\n        <input\n          placeholder=\"Categoria\"\n          value={category}\n          onChange={event => setCategory(event.target.value)}\n        />\n\n        <button\n          type=\"submit\"\n        >\n          Cadastrar\n        </button>\n      </Container>\n    </Modal>\n  );\n}","import { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\n\nModal.setAppElement('#root');\n\nexport function App() {\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n  return (\n    <>\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\n      <Dashboard />\n\n      <NewTransactionModal \n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handleCloseNewTransactionModal}\n      />\n      \n      <GlobalStyle />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createServer, Model } from 'miragejs';\nimport { App } from './App';\n\ncreateServer({\n  models: {\n    transaction: Model,\n  },\n\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/transactions', () => {\n      return this.schema.all('transaction')\n    })\n\n    this.post('/transactions', (schema, request) => {\n      const data = JSON.parse(request.requestBody)\n\n      return schema.create('transactions', data)\n    })\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}